<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.job52.dao.PersonMapper" >

    <resultMap id="BaseResultMap" type="com.job52.model.Person" >
        <id column="pid" property="pid" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="pass_word" property="passWord" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        pid, user_name, pass_word, phone, email, img_url
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from person
        where pid = #{pid,jdbcType=VARCHAR}
    </select>

    <select id="findLastId" resultType="java.lang.Integer">
        SELECT pid FROM person ORDER BY pid DESC LIMIT 1;
    </select>

    <!--通过用户名和密码来查找用户-->
    <select id="findPersonByNameAndPwd"  parameterType="com.job52.model.Person" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM person
        WHERE (user_name = #{userName} OR phone = #{phone} OR email = #{email})
        AND pass_word = #{passWord}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from person
        where pid = #{pid,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.job52.model.Person" >
        insert into person (pid, user_name, pass_word, 
            phone, email, img_url
            )
        values (#{pid,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
            #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.job52.model.Person" >
        insert into person
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="pid != null" >
                pid,
            </if>
            <if test="userName != null" >
                user_name,
            </if>
            <if test="passWord != null" >
                pass_word,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="imgUrl != null" >
                img_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="pid != null" >
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null" >
                #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null" >
                #{imgUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.job52.model.Person" >
        update person
        <set >
            <if test="userName != null" >
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null" >
                pass_word = #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null" >
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where pid = #{pid,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.job52.model.Person" >
        update person
        set user_name = #{userName,jdbcType=VARCHAR},
            pass_word = #{passWord,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            img_url = #{imgUrl,jdbcType=VARCHAR}
        where pid = #{pid,jdbcType=VARCHAR}
    </update>
</mapper>