<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.job52.dao.JobMapper" >

    <resultMap id="BaseResultMap" type="com.job52.model.Job" >
        <id column="jid" property="jid" jdbcType="VARCHAR" />
        <result column="eid" property="eid" jdbcType="VARCHAR" />
        <result column="pid" property="pid" jdbcType="VARCHAR" />
        <result column="required_number" property="requiredNumber" jdbcType="INTEGER" />
        <result column="jname" property="jname" jdbcType="VARCHAR" />
        <result column="required_workyear" property="requiredWorkyear" jdbcType="INTEGER" />
        <result column="required_education" property="requiredEducation" jdbcType="VARCHAR" />
        <result column="benefit" property="benefit" jdbcType="VARCHAR" />
        <result column="job_desc" property="jobDesc" jdbcType="LONGVARCHAR" />
        <result column="job_type" property="jobType" jdbcType="VARCHAR" />
        <result column="work_place" property="workPlace" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        jid, eid, pid, required_number, jname, required_workyear, required_education, benefit, 
        job_desc, job_type, work_place
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from job
        where jid = #{jid,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from job
        where jid = #{jid,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.job52.model.Job" >
        insert into job (jid, eid, pid, 
            required_number, jname, required_workyear, 
            required_education, benefit, job_desc, 
            job_type, work_place)
        values (#{jid,jdbcType=VARCHAR}, #{eid,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
            #{requiredNumber,jdbcType=INTEGER}, #{jname,jdbcType=VARCHAR}, #{requiredWorkyear,jdbcType=INTEGER}, 
            #{requiredEducation,jdbcType=VARCHAR}, #{benefit,jdbcType=VARCHAR}, #{jobDesc,jdbcType=LONGVARCHAR}, 
            #{jobType,jdbcType=VARCHAR}, #{workPlace,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.job52.model.Job" >
        insert into job
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="jid != null" >
                jid,
            </if>
            <if test="eid != null" >
                eid,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="requiredNumber != null" >
                required_number,
            </if>
            <if test="jname != null" >
                jname,
            </if>
            <if test="requiredWorkyear != null" >
                required_workyear,
            </if>
            <if test="requiredEducation != null" >
                required_education,
            </if>
            <if test="benefit != null" >
                benefit,
            </if>
            <if test="jobDesc != null" >
                job_desc,
            </if>
            <if test="jobType != null" >
                job_type,
            </if>
            <if test="workPlace != null" >
                work_place,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="jid != null" >
                #{jid,jdbcType=VARCHAR},
            </if>
            <if test="eid != null" >
                #{eid,jdbcType=VARCHAR},
            </if>
            <if test="pid != null" >
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="requiredNumber != null" >
                #{requiredNumber,jdbcType=INTEGER},
            </if>
            <if test="jname != null" >
                #{jname,jdbcType=VARCHAR},
            </if>
            <if test="requiredWorkyear != null" >
                #{requiredWorkyear,jdbcType=INTEGER},
            </if>
            <if test="requiredEducation != null" >
                #{requiredEducation,jdbcType=VARCHAR},
            </if>
            <if test="benefit != null" >
                #{benefit,jdbcType=VARCHAR},
            </if>
            <if test="jobDesc != null" >
                #{jobDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="jobType != null" >
                #{jobType,jdbcType=VARCHAR},
            </if>
            <if test="workPlace != null" >
                #{workPlace,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.job52.model.Job" >
        update job
        <set >
            <if test="eid != null" >
                eid = #{eid,jdbcType=VARCHAR},
            </if>
            <if test="pid != null" >
                pid = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="requiredNumber != null" >
                required_number = #{requiredNumber,jdbcType=INTEGER},
            </if>
            <if test="jname != null" >
                jname = #{jname,jdbcType=VARCHAR},
            </if>
            <if test="requiredWorkyear != null" >
                required_workyear = #{requiredWorkyear,jdbcType=INTEGER},
            </if>
            <if test="requiredEducation != null" >
                required_education = #{requiredEducation,jdbcType=VARCHAR},
            </if>
            <if test="benefit != null" >
                benefit = #{benefit,jdbcType=VARCHAR},
            </if>
            <if test="jobDesc != null" >
                job_desc = #{jobDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="jobType != null" >
                job_type = #{jobType,jdbcType=VARCHAR},
            </if>
            <if test="workPlace != null" >
                work_place = #{workPlace,jdbcType=VARCHAR},
            </if>
        </set>
        where jid = #{jid,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.job52.model.Job" >
        update job
        set eid = #{eid,jdbcType=VARCHAR},
            pid = #{pid,jdbcType=VARCHAR},
            required_number = #{requiredNumber,jdbcType=INTEGER},
            jname = #{jname,jdbcType=VARCHAR},
            required_workyear = #{requiredWorkyear,jdbcType=INTEGER},
            required_education = #{requiredEducation,jdbcType=VARCHAR},
            benefit = #{benefit,jdbcType=VARCHAR},
            job_desc = #{jobDesc,jdbcType=LONGVARCHAR},
            job_type = #{jobType,jdbcType=VARCHAR},
            work_place = #{workPlace,jdbcType=VARCHAR}
        where jid = #{jid,jdbcType=VARCHAR}
    </update>
</mapper>