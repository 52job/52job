<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.job52.dao.JobMapper" >

    <resultMap id="BaseResultMap" type="com.job52.model.Job" >
        <id column="jid" property="jid" jdbcType="VARCHAR" />
        <result column="required_number" property="requiredNumber" jdbcType="INTEGER" />
        <result column="jname" property="jname" jdbcType="VARCHAR" />
        <result column="required_workyear" property="requiredWorkyear" jdbcType="INTEGER" />
        <result column="required_education" property="requiredEducation" jdbcType="INTEGER" />
        <result column="min_salary" property="minSalary" jdbcType="INTEGER" />
        <result column="max_salary" property="maxSalary" jdbcType="INTEGER" />
        <result column="benefit" property="benefit" jdbcType="VARCHAR" />
        <result column="job_desc" property="jobDesc" jdbcType="LONGVARCHAR" />
        <result column="job_type" property="jobType" jdbcType="VARCHAR" />
        <result column="work_place" property="workPlace" jdbcType="VARCHAR" />
        <result column="job_statue" property="jobStatue" jdbcType="INTEGER" />
        <association property="enterprise" javaType="com.job52.model.Enterprise">
            <id column="eid" property="eid" jdbcType="VARCHAR"></id>
            <result column="ename" property="ename" jdbcType="VARCHAR"></result>
            <result column="e_type" property="eType" jdbcType="VARCHAR"></result>
        </association>
    </resultMap>

    <sql id="Base_Column_List" >
        jid, job.eid, pid, required_number, jname, required_workyear, required_education, min_salary,
        max_salary, benefit, job_desc, job_type, work_place, job_statue
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />,ename,e_type
        from job,enterprise
        where job.eid = enterprise.eid and jid = #{jid,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from job
        where jid = #{jid,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.job52.model.Job" >
        insert into job (jid, eid, pid, 
            required_number, jname, required_workyear, 
            required_education, min_salary, max_salary,
            benefit, job_desc, job_type,
            work_place, job_statue)
        values (#{jid,jdbcType=VARCHAR}, #{enterprise.eid,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR},
            #{requiredNumber,jdbcType=INTEGER}, #{jname,jdbcType=VARCHAR}, #{requiredWorkyear,jdbcType=INTEGER},
            #{requiredEducation,jdbcType=INTEGER}, #{minSalary,jdbcType=INTEGER}, #{maxSalary,jdbcType=INTEGER},
            #{benefit,jdbcType=VARCHAR}, #{jobDesc,jdbcType=LONGVARCHAR}, #{jobType,jdbcType=VARCHAR},
            #{workPlace,jdbcType=VARCHAR}, #{jobStatue,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.job52.model.Job" >
        insert into job
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="jid != null" >
                jid,
            </if>
            <if test="eid != null" >
                eid,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="requiredNumber != null" >
                required_number,
            </if>
            <if test="jname != null" >
                jname,
            </if>
            <if test="requiredWorkyear != null" >
                required_workyear,
            </if>
            <if test="requiredEducation != null" >
                required_education,
            </if>
            <if test="minSalary != null" >
                min_salary,
            </if>
            <if test="maxSalary != null" >
                max_salary,
            </if>
            <if test="benefit != null" >
                benefit,
            </if>
            <if test="jobDesc != null" >
                job_desc,
            </if>
            <if test="jobType != null" >
                job_type,
            </if>
            <if test="workPlace != null" >
                work_place,
            </if>
            <if test="jobStatue != null" >
                job_statue,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="jid != null" >
                #{jid,jdbcType=VARCHAR},
            </if>
            <if test="eid != null" >
                #{eid,jdbcType=VARCHAR},
            </if>
            <if test="pid != null" >
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="requiredNumber != null" >
                #{requiredNumber,jdbcType=INTEGER},
            </if>
            <if test="jname != null" >
                #{jname,jdbcType=VARCHAR},
            </if>
            <if test="requiredWorkyear != null" >
                #{requiredWorkyear,jdbcType=INTEGER},
            </if>
            <if test="requiredEducation != null" >
                #{requiredEducation,jdbcType=INTEGER},
            </if>
            <if test="minSalary != null" >
                #{minSalary,jdbcType=INTEGER},
            </if>
            <if test="maxSalary != null" >
                #{maxSalary,jdbcType=INTEGER},
            </if>
            <if test="benefit != null" >
                #{benefit,jdbcType=VARCHAR},
            </if>
            <if test="jobDesc != null" >
                #{jobDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="jobType != null" >
                #{jobType,jdbcType=VARCHAR},
            </if>
            <if test="workPlace != null" >
                #{workPlace,jdbcType=VARCHAR},
            </if>
            <if test="jobStatue != null" >
                #{jobStatue,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.job52.model.Job" >
        update job
        <set >
            <if test="eid != null" >
                eid = #{eid,jdbcType=VARCHAR},
            </if>
            <if test="pid != null" >
                pid = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="requiredNumber != null" >
                required_number = #{requiredNumber,jdbcType=INTEGER},
            </if>
            <if test="jname != null" >
                jname = #{jname,jdbcType=VARCHAR},
            </if>
            <if test="requiredWorkyear != null" >
                required_workyear = #{requiredWorkyear,jdbcType=INTEGER},
            </if>
            <if test="requiredEducation != null" >
                required_education = #{requiredEducation,jdbcType=INTEGER},
            </if>
            <if test="minSalary != null" >
                min_salary = #{minSalary,jdbcType=INTEGER},
            </if>
            <if test="maxSalary != null" >
                max_salary = #{maxSalary,jdbcType=INTEGER},
            </if>
            <if test="benefit != null" >
                benefit = #{benefit,jdbcType=VARCHAR},
            </if>
            <if test="jobDesc != null" >
                job_desc = #{jobDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="jobType != null" >
                job_type = #{jobType,jdbcType=VARCHAR},
            </if>
            <if test="workPlace != null" >
                work_place = #{workPlace,jdbcType=VARCHAR},
            </if>
            <if test="jobStatue != null" >
                job_statue = #{jobStatue,jdbcType=INTEGER},
            </if>
        </set>
        where jid = #{jid,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.job52.model.Job" >
        update job
        set eid = #{enterprise.eid,jdbcType=VARCHAR},
            required_number = #{requiredNumber,jdbcType=INTEGER},
            jname = #{jname,jdbcType=VARCHAR},
            required_workyear = #{requiredWorkyear,jdbcType=INTEGER},
            required_education = #{requiredEducation,jdbcType=INTEGER},
            min_salary = #{minSalary,jdbcType=INTEGER},
            max_salary = #{maxSalary,jdbcType=INTEGER},
            benefit = #{benefit,jdbcType=VARCHAR},
            job_desc = #{jobDesc,jdbcType=LONGVARCHAR},
            job_type = #{jobType,jdbcType=VARCHAR},
            work_place = #{workPlace,jdbcType=VARCHAR},
            job_statue = #{jobStatue,jdbcType=INTEGER}
        where jid = #{jid,jdbcType=VARCHAR}
    </update>

    <select id="query" parameterType="com.job52.model.Job"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from job,enterprise where job.eid = enterprise.eid

            <trim prefixOverrides="and">
                <if test="jid != null" >
                    and jid = #{jid}
                </if>
                <if test="requiredNumber != null" >
                    and required_number = #{requiredNumber,jdbcType=INTEGER}
                </if>
                <if test="jname != null" >
                    and jname = #{jname,jdbcType=VARCHAR}
                </if>
                <if test="requiredWorkyear != null" >
                    required_workyear = #{requiredWorkyear,jdbcType=INTEGER}
                </if>
                <if test="requiredEducation != null" >
                    and required_education = #{requiredEducation,jdbcType=INTEGER}
                </if>
                <if test="benefit != null" >
                    and benefit = #{benefit,jdbcType=VARCHAR}
                </if>
                <if test="jobDesc != null" >
                    and job_desc = #{jobDesc,jdbcType=LONGVARCHAR}
                </if>
                <if test="jobType != null" >
                    and job_type = #{jobType,jdbcType=VARCHAR}
                </if>
                <if test="jobStatue != null">
                    and job_statue = #{jobStatue,jdbcType=INTEGER}
                </if>
                <if test="workPlace != null" >
                    and work_place = #{workPlace,jdbcType=VARCHAR}
                </if>
            </trim>

    </select>
    <select id="queryContains" parameterType="com.job52.model.Job" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from job,enterprise where job.eid = enterprise.eid
            <trim prefixOverrides="and">
                <if test="requiredNumber != null" >
                    and  required_number = #{requiredNumber,jdbcType=INTEGER}
                </if>
                <if test="jname != null" >
                    and  jname like "%"#{jname,jdbcType=VARCHAR}"%"
                </if>
                <if test="requiredWorkyear != null" >
                    and  required_workyear like "%"#{requiredWorkyear,jdbcType=INTEGER}"%"
                </if>
                <if test="requiredEducation != null" >
                    and  required_education like "%"#{requiredEducation,jdbcType=INTEGER}"%"
                </if>
                <if test="benefit != null" >
                    and  benefit like "%"#{benefit,jdbcType=VARCHAR}"%"
                </if>
                <if test="jobDesc != null" >
                    and  job_desc like "%"#{jobDesc,jdbcType=LONGVARCHAR}"%"
                </if>
                <if test="jobType != null" >
                    and  job_type like "%"#{jobType,jdbcType=VARCHAR}"%"
                </if>
                <if test="jobStatue != null">
                    and job_statue = #{jobStatue,jdbcType=INTEGER}
                </if>
                <if test="workPlace != null" >
                    and  work_place like "%"#{workPlace,jdbcType=VARCHAR}"%"
                </if>
            </trim>
    </select>

    <select id="queryString" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from job,enterprise where job.eid = enterprise.eid
        and (jid like "%"#{jid,jdbcType=VARCHAR}"%"
        or  jname like "%"#{jname,jdbcType=VARCHAR}"%"
        or  benefit like "%"#{benefit,jdbcType=VARCHAR}"%"
        or  job_desc like "%"#{jobDesc,jdbcType=LONGVARCHAR}"%"
        or  job_type like "%"#{jobType,jdbcType=VARCHAR}"%"
        or  work_place like "%"#{workPlace,jdbcType=VARCHAR}"%")
    </select>

    <select id="queryJobs" parameterType="com.job52.model.Job" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>,ename,e_type
        from job,enterprise where job.eid = enterprise.eid
        and required_workyear >= #{requiredWorkyear,jdbcType=INTEGER}
        and
        ((max_salary >= #{minSalary,jdbcType=INTEGER} and max_salary &lt;= #{maxSalary,jdbcType=INTEGER})
        or (min_salary >= #{minSalary,jdbcType=INTEGER} and min_salary &lt;= #{maxSalary,jdbcType=INTEGER}))
        and required_education >= #{requiredEducation,jdbcType=INTEGER}
        and job_statue = 1
        <if test="enterprise.eType != null">
            and e_type = #{enterprise.eType,jdbcType=VARCHAR}
        </if>
        and
        ( jname like "%"#{jname}"%"
        or  benefit like "%"#{benefit,jdbcType=VARCHAR}"%"
        or  job_desc like "%"#{jobDesc,jdbcType=VARCHAR}"%"
        or  job_type like "%"#{jobType,jdbcType=VARCHAR}"%"
        or  work_place like "%"#{workPlace,jdbcType=VARCHAR}"%"
        or ename like "%"#{jname}"%")
    </select>

</mapper>